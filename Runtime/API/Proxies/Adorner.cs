//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Adorner : FrameworkElement {
  internal new static Adorner CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new Adorner(cPtr, cMemoryOwn);
  }

  internal Adorner(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(Adorner obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public Adorner(UIElement adornedElement) {
    SetAdornedElement(adornedElement);
  }

  public virtual Matrix4 GetDesiredTransform(Matrix4 transform) {
    return transform;
  }

  public UIElement AdornedElement {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Adorner_AdornedElement_get(swigCPtr);
      return (UIElement)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public bool IsClipEnabled {
    set {
      NoesisGUI_PINVOKE.Adorner_IsClipEnabled_set(swigCPtr, value);
    } 
    get {
      bool ret = NoesisGUI_PINVOKE.Adorner_IsClipEnabled_get(swigCPtr);
      return ret;
    } 
  }

  private void SetAdornedElement(UIElement adornedElement) {
    NoesisGUI_PINVOKE.Adorner_SetAdornedElement(swigCPtr, UIElement.getCPtr(adornedElement));
  }

  internal new static IntPtr Extend(string typeName) {
    return NoesisGUI_PINVOKE.Extend_Adorner(Marshal.StringToHGlobalAnsi(typeName));
  }
}

}


//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class GridSplitter : Thumb {
  internal new static GridSplitter CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new GridSplitter(cPtr, cMemoryOwn);
  }

  internal GridSplitter(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(GridSplitter obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public GridSplitter() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    registerExtend = false;
    return NoesisGUI_PINVOKE.new_GridSplitter();
  }

  public static DependencyProperty DragIncrementProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GridSplitter_DragIncrementProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty KeyboardIncrementProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GridSplitter_KeyboardIncrementProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ResizeDirectionProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GridSplitter_ResizeDirectionProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ResizeBehaviorProperty {
    set {
      NoesisGUI_PINVOKE.GridSplitter_ResizeBehaviorProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GridSplitter_ResizeBehaviorProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ShowsPreviewProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GridSplitter_ShowsPreviewProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty PreviewStyleProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GridSplitter_PreviewStyleProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public float DragIncrement {
    set {
      NoesisGUI_PINVOKE.GridSplitter_DragIncrement_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.GridSplitter_DragIncrement_get(swigCPtr);
      return ret;
    } 
  }

  public float KeyboardIncrement {
    set {
      NoesisGUI_PINVOKE.GridSplitter_KeyboardIncrement_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.GridSplitter_KeyboardIncrement_get(swigCPtr);
      return ret;
    } 
  }

  public GridResizeDirection ResizeDirection {
    set {
      NoesisGUI_PINVOKE.GridSplitter_ResizeDirection_set(swigCPtr, (int)value);
    } 
    get {
      GridResizeDirection ret = (GridResizeDirection)NoesisGUI_PINVOKE.GridSplitter_ResizeDirection_get(swigCPtr);
      return ret;
    } 
  }

  public GridResizeBehavior ResizeBehavior {
    set {
      NoesisGUI_PINVOKE.GridSplitter_ResizeBehavior_set(swigCPtr, (int)value);
    } 
    get {
      GridResizeBehavior ret = (GridResizeBehavior)NoesisGUI_PINVOKE.GridSplitter_ResizeBehavior_get(swigCPtr);
      return ret;
    } 
  }

  public bool ShowsPreview {
    set {
      NoesisGUI_PINVOKE.GridSplitter_ShowsPreview_set(swigCPtr, value);
    } 
    get {
      bool ret = NoesisGUI_PINVOKE.GridSplitter_ShowsPreview_get(swigCPtr);
      return ret;
    } 
  }

  public Style PreviewStyle {
    set {
      NoesisGUI_PINVOKE.GridSplitter_PreviewStyle_set(swigCPtr, Style.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GridSplitter_PreviewStyle_get(swigCPtr);
      return (Style)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

}

}

